/*
 * This file is generated by jOOQ.
 */
package db.com.example.demo.db.tables.interfaces;


import org.jetbrains.annotations.NotNull;

import java.io.Serializable;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "PERSON", schema = "person", indexes = {
    @Index(name = "PRIMARY", unique = true, columnList = "ID ASC")
})
public interface IPerson extends Serializable {

    /**
     * Setter for <code>person.PERSON.ID</code>.
     */
    public void setId(Integer value);

    /**
     * Getter for <code>person.PERSON.ID</code>.
     */
    @Id
    @Column(name = "ID", unique = true, nullable = false, precision = 10)
    @NotNull
    public Integer getId();

    /**
     * Setter for <code>person.PERSON.NAME</code>.
     */
    public void setName(String value);

    /**
     * Getter for <code>person.PERSON.NAME</code>.
     */
    @Column(name = "NAME", length = 50)
    @Size(max = 50)
    public String getName();

    /**
     * Setter for <code>person.PERSON.EMAIL</code>.
     */
    public void setEmail(String value);

    /**
     * Getter for <code>person.PERSON.EMAIL</code>.
     */
    @Column(name = "EMAIL", nullable = false, length = 50)
    @NotNull
    @Size(max = 50)
    public String getEmail();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IPerson
     */
    public void from(db.com.example.demo.db.tables.interfaces.IPerson from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IPerson
     */
    public <E extends db.com.example.demo.db.tables.interfaces.IPerson> E into(E into);
}
